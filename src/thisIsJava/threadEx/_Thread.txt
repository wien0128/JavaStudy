###쓰레드###

- 멀티 스레드
하나의 프로세스가 두 가지 이상의 작업을 병렬 처리하는 것

- 스레드: 코드의 실행 흐름

멀티 프로세스의 경우 오류로 인한 사이드 이펙트 X
멀티 스레드는 오류 발생 시 프로세스가 종료된다, 따라서 사이드 이펙트 O

예외 처리에 신경을 써야 함.

- 메인 스레드: public static void main(String[] args) {}

- 스레드 구현과 실행 방법
1. Thread 익명 클래스로 직접 생성
Thread thread = new Thread(new Runnable() { @Override run() ... }
2. Thread 익명 자식 클래스로 생성
Thread thread = new Thread() { @Override run() ... )

- 스레드 이름
스레드 이름 설정: thread.setName("Name");
스레드 객체 참조 후 조사
: Thread thread = Thread.currentThread();
  System.out.println(thread.getName());

- 스레드 상태
NEW = 스레드 객체 생성
RUNNABLE = 실행 대기
RUNNING = 실행
TERMINATED = 종료
WAITING, TIMED_WAITING = 일시 정지

일시 정지 상태에서는 InterruptedException 발생 할 수 있기에 예외 처리 필수

스레드 객체 생성(NEW) 후 RUNNABLE 상태로 진입
-> CPU 스케줄링에 따라 run() 메소드 실행, RUNNING 상태
-> 반복, RUNNABLE 과 RUNNING 상태를 번갈아 가면서 실행
-> 메소드 종료는 TERMINATED 상태

• 일시 정지 진입 메소드
sleep(long millis): milli 초 동안 스레드 일시 정지, 이후 RUNNABLE 상태
join(): join()을 호출한 스레드는 일시 정지, join() 메소드를 가진 스레드가 종료되면 RUNNABLE 상태 진입
wait(): 동기화 블록 내에서 스레드 일시 정지 상태로 만듦
• 일시 정지 탈출 메소드
interrupt(): 일시 정지 상태일 경우, InterruptedException 발생 후 RUNNABLE 또는 TERMINATED 상태로 만듦
notify(), notifyAll(): wait() 메소드로 일시 정지 상태인 스레드를 RUNNABLE 상태로 만듦
• 실행 대기 진입
yield(): 실행 상태에서 다른 스레드에게 실행을 양보하고 실행 대기 상태가 됨

Object Class Method: wait(), notify(), notifyAll()
이외의 메소드들은 Thread Class Method 이다.

- 스레드 동기화
객체 공유로 인한 데이터 변질을 막기 위해 synchronized(동기화) 메소드와 블록 지원
객체 내부에 동기화 메소드와 블록이 여러 개가 있다면 스레드가 이들 중 하나를 실행할 때
다른 스레드는 해당 메소드, 동기화 메소드 및 블록 실행 불가. 단, 일반 메소드는 실행 가능

• 동기화 메소드 선언
public synchronized void method() { ... }
• 동기화 메소드 일부 선언
public void method() {
    synchronized(공유객체) {
        - 단 하나의 스레드만 실행하는 영역
    }

    - 여러 스레드가 실행 가능한 영역
}


- 스레드 안전 종료
stop() 메소드가 있지만 deprecated 기에 사용 금지
스레드를 안전하게 종료하는 방법은 사용하던 리소스 정리 후 run() 메소드를 종료하는 것
1. 조건 이용
2. interrupt() 메소드 이용
    2-1. interrupt() 메소드는 스레드가 일시 정지 상태일 때 InterruptedException 발셍
        try-catch 문을 이용해서 run()을 빠져나오게 끔 하게 함
        정적 메소드 interrupted()와 인스턴스 메소드 isInterrupted()를 사용

- 데몬(Daemon) 스레드
주 스레드의 작업을 돕는 보조적인 스레드
주 스레드가 종료되면 데몬 스레드도 같이 종료
Ex. 워드 자동 저장, 미디어플레이어 동영상 및 음악 재생, GC 등

public static void main(String[] args) {
    DaemonThread dt = new DaemonThread();
    // 주 스레드가 데몬이 될 스레드의 setDaemon(true)를 호출하면 됨.
    dt.setDaemon(true);
    dt.start();
    ...
}

- 스레드 풀(ThreadPool)
