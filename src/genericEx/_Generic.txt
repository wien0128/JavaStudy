###제네릭###

class Generic<T> {
    Generic<T> a = new Generic<>();
}

- T는 타입 매개변수
- 생성 시점에 <원하는 타입> 지정
- 한 번 타입이 정해지면 Type-Safe 함
- new Generic<>()로 타입 추론도 가능
- 타입 추론 후 컴파일러는 타입 정보를 기반으로 코드 가정 후 반영
- 사용하는 생성 시점에 내부에서 타입을 결정하는 것
- !사용할 타입을 미리 결정하지 않는다는 점이 핵심!

1. 메소드는 매개변수에 인자를 전달해서 사용할 값을 결정
2. 제네릭 클래스는 타입 매개변수에 타입 인자를 전달해 타입을 결정

제네릭 타입
- 클래스 or 인터페이스 정의할 때 타입 매개변수를 쓰는 것
- class Generic<T> { ... }

타입 매개변수
- 제네릭 타입이나 메소드에 사용되는 변수, 실제 타입으로 대체
- Generic<T>, T가 타입 매개변수

타입 인자
- ! 타입 인자로 primitive type(int, double) 사용 불가
- 제네릭 타입을 사용할 때 제공되는 실제 타입
- String, Integer, Double, etc.

제네릭 명명 관례
E - Element
K - Key
N - Number
T - Type
V - Value
S, U, V, etc. - 2nd, 3rd, 4th types

Raw Type (쓰지 말것, 알고만 있길)
- 